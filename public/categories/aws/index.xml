<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aws on uranari dayo</title>
    <link>https://www.uranari.io/categories/aws/</link>
    <description>Recent content in Aws on uranari dayo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sat, 26 Oct 2019 11:20:49 +0900</lastBuildDate>
    
	<atom:link href="https://www.uranari.io/categories/aws/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CloudTrail Monitoring -IAM-</title>
      <link>https://www.uranari.io/tech/aws/cloudtrail-monitoring-iam/</link>
      <pubDate>Sat, 26 Oct 2019 11:20:49 +0900</pubDate>
      
      <guid>https://www.uranari.io/tech/aws/cloudtrail-monitoring-iam/</guid>
      <description>CloudTrail 見てますか？ AWS を利用するうえでのセキュリティ対策として CloudTrail を有効にすることが色んな記事で紹介されていますが、皆さんちゃんと見ていますか？
ふだん自分がセキュリティ対策として CloudTrail のログでどういったリアルタイム監視をしているかをリソース別に紹介したいと思います。 すべてのリソースのログを一つの記事で紹介すると量が多くなってしまうため、今回はログインと IAM、AssumeRole 周りのログの監視について紹介したいと思います。
紹介するイベントについてとCloudTrailのログについて 本記事と今後も CloudTrail のログ監視について紹介する記事を書くことがあった場合、基本的に Event name の値別で紹介していきます。 また、CloudTrail のログでは、そのイベントが失敗したか成功したかについてはログに errorcode や errormessage のフィールドに値が入っているかどうかで判断できます。
これらのフィールドに値が入っている場合はそのイベントは失敗しており、その理由がそれらのフィールドに記録されます。
  cloudtrailの画面 View event を開くと生ログが見れる   ConsoleLogin 名前の通り、AWS の Web コンソール にログインを試みた際に記録されるイベント。
あくまで Webコンソール にログインを試みたイベントなので、AWS CLI などを利用した場合はこのイベントは記録されません。
もし急に海外からのログインとかがあったり、本人が身に覚えのない場合は認証情報が漏洩している可能性があるかもしれません。
CreateUser 新しい IAM User が作成された際に記録されるイベント。
勝手に変なユーザーが作成されてないか確認することができます。
CreatePolicy IAM で新しい Policy を作成した際に記録されるイベント。
付与される権限も CloudTrail のログに記録されているので、余計な権限が付与されてないか確認することができます。
CreatePolicyVersion 既存の Policy を編集する際に記録されるイベントです。
こちらもログにインラインポリシーが記録されているので余計な権限が付与されてないか確認することができます。
CreateRole 新しい Role が作成されたときに記録されるイベント。</description>
    </item>
    
    <item>
      <title>AWS Security Monitoring -IAM-</title>
      <link>https://www.uranari.io/tech/aws/aws-security-monitoring-iam/</link>
      <pubDate>Wed, 01 May 2019 11:20:49 +0900</pubDate>
      
      <guid>https://www.uranari.io/tech/aws/aws-security-monitoring-iam/</guid>
      <description>AWS Security Monitoring, that was introduced some checkpoint on some web sites.
But i hava not seen so much &amp;ldquo;how check&amp;rdquo;, i will introduce example on use Cloudwatch Logs Insight and CloudTrail to check IAM rule.
Narrow down IAM event First step, narrow down only IAM event.
sample query
fields eventSource, @timestamp | filter eventSource = &amp;quot;iam.amazonaws.com&amp;quot;  
Create New User example case, if you were stolen aws credential, attacker may create new user in use that credential.</description>
    </item>
    
    <item>
      <title>Amazon CloudWatch Logs Insights で SIEM ぽいことをやってみる</title>
      <link>https://www.uranari.io/tech/security/aws-siem-for-insights/</link>
      <pubDate>Thu, 03 Jan 2019 12:28:36 +0900</pubDate>
      
      <guid>https://www.uranari.io/tech/security/aws-siem-for-insights/</guid>
      <description>AWS re:Ivent 2018 では AWS Security Hub や KMS Custom Key Store などの新しいセキュリティ関連のマネージドサービスが発表されましたが、個人的に一番熱かったのが Amazon CloudWatch Logs Insights だったので紹介しておきます。
Amazon CloudWatch Logs Insights は従来の CloudWatch Logs のログをインタラクティブに検索できるものですが、概要だけ聞いたときに「それ SIEM じゃん」と思ったので、実際に SIEM として使えるか試してみました。
ここでは例として CloudTrail のログを分析対象とします。
あらかじめ CloudTrail のログを CloudWatch へ転送する設定を別途実施しておいてください。
今回は CloudTrail のログから S3 の特定のバケットに オブジェクトが作成された際にバケット名やオブジェクト名を絞る方法を説明します。
まず始めに CloudTrail のログを分析するときはログを eventSouce のフィールド毎に分けることをおすすめします。
話が脱線しますが、こういった SIEM のルールを作る際は上記の「S3のバケットにオブジェクトが作成された際のバケット名やオブジェクト名を知りたい」のようにルールの目的やアラートを発出する際の条件とそれが検知された際の調査項目などをあらかじめ整理しておくことをおすすめします。
典型的なダメダメなパターンは、とりあえず GuardDuty を ON にしたけどアラート飛んできてもこれがだめなものか分からないし、何を調査したらいいか分からないといったパターンです。
それアラート設定してる意味ないじゃんとなります。
話を戻して CloudWatch Logs Insight でのログの絞り込み方法です。
まず eventSource ごとに分けることをおすすめしましたので eventSource だけを表示させます。

ここから S3 のイベントに絞ってさらに特定のバケットのイベントに絞ると以下のようになります。</description>
    </item>
    
    <item>
      <title>AWS LightsailでWordPressを立ち上げるときに/bitnami/index.htmlを表示させない</title>
      <link>https://www.uranari.io/tech/aws/42/</link>
      <pubDate>Thu, 02 Feb 2017 12:20:02 +0000</pubDate>
      
      <guid>https://www.uranari.io/tech/aws/42/</guid>
      <description>このblogはAWS Lightsailで運用していますが、立ち上げるときに気をつけたことを書いておきます。
AWS LightsailのWordPressでデフォルト状態のままだと http://ip[domain]/bitnami/でアクセスするとWordPressのユーザーアカウントが記載されたページが表示されます。
パスワードは記載されていませんが精神衛生上よろしくないので/bitnami/にアクセスがあるとトップページにリダイレクトさせたいと思います。
AWS LightsailsのWordPressのイメージのapacheの設定ファイルは /opt/bitnami/apache2/conf/httpd.confです。
&amp;lt;IfModule alias_module ~ # 下の1行を追加する RedirectMatch \/bitnami\/(.*) / ~ &amp;lt;/IfModule  あと個人でblogを運用していて自宅以外からは管理画面にアクセスしないという人は/opt/bitnami/apps/wordpress/conf/htaccess.confに以下の設定もしておくといいと思います。
# 一番下に以下の内容をディレクティブごと追加 &amp;lt;Directory &#34;/opt/bitnami/apps/wordpress/htdocs/wp-admin/&#34; Order deny,allow Deny from all Allow from &#34;自分のIPアドレス&#34; &amp;lt;/Directory &amp;lt;Directory &#34;/opt/bitnami/apps/wordpress/htdocs/&#34; &amp;lt;Files wp-login.php Order deny,allow Deny from all Allow from &#34;自分のIPアドレス&#34; &amp;lt;/Files &amp;lt;/Directory  bitnamiというXAMPPみたいな？LAMP環境を使っているみたいですが設定ファイルの場所を探すのに苦労しました。</description>
    </item>
    
  </channel>
</rss>